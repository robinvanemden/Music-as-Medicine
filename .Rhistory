music <- readWave("../music/music-as-medicine-cut-to-beeps.wav", from = 17, to = 31, units = "minutes")
plot(music)
library(here)
library(tuneR)
library(data.table)
library(signal)
source("qrs_detect.R")
source("peak_detect.R")
lin_map <- function(x, from, to) {
(x - min(x)) / max(x - min(x)) * (to - from) + from
}
setwd(here::here("scripts"))
# read music wav, that has been pre-cut to delete all before first and past last beeps
# range 0 to 4139.022 seconds
# retrieve the part from 17 to 31 minutes - that is, the first musical intermezzo
music <- readWave("../music/music-as-medicine-cut-to-beeps.wav", from = 17, to = 31, units = "minutes")
plot(music)
temp = list.files(pattern="../ecg/*.csv")
temp = list.files(pattern="*.csv")
?list.files
temp = list.files(path = "../ecg/", pattern="*.csv")
setNames(temp, make.names(gsub("*.csv$", "", temp)))
?fread
files = list.files(path = "../ecg/", pattern="*.csv")
for (i in 1:length(files)) assign(files[i], fread("../ecg/p3.csv", sep=";"))
for (i in 1:length(files))
assign(files[i], fread(paste0("../ecg/",temp[i]), sep=";"))
files = list.files(path = "../ecg/", pattern="*.csv")
for (i in 1:length(files))
assign(paste0("subject_",i), fread(paste0("../ecg/",temp[i]), sep=";"))
source('~/GitHub/Music-as-Medicine/scripts/importer.R')
source('~/GitHub/Music-as-Medicine/scripts/importer.R')
source('~/GitHub/Music-as-Medicine/scripts/importer.R')
source('~/GitHub/Music-as-Medicine/scripts/importer.R')
library(here)
library(tuneR)
library(data.table)
library(signal)
source("qrs_detect.R")
source("peak_detect.R")
lin_map <- function(x, from, to) {
(x - min(x)) / max(x - min(x)) * (to - from) + from
}
setwd(here::here("scripts"))
########################################################## import files #########################################################
# read and plot music wav, that has been pre-cut to delete all before first and past last beeps
# full range 0 to 4139.022 seconds
# here, retrieve the part from 17 to 31 minutes - that is, the first musical intermezzo
music <- readWave("../music/music-as-medicine-cut-to-beeps.wav", from = 17, to = 31, units = "minutes")
plot(music)
# read the bobbi data files in data dir
my.data <- list()
files = list.files(path = "../ecg/", pattern="*.csv")
for (i in 1:length(files))
my.data[[i]] <- assign(paste0("subject_",i), fread(paste0("../ecg/",files[i]), sep=";"))
# delete empty variable
View(my.data)
source('~/GitHub/Music-as-Medicine/scripts/importer.R')
subject_data[[1]]
files = list.files(path = "../ecg/", pattern="*.csv")
for (i in 1:length(files))
subject_data[[paste0("subject_",i)]] <- fread(paste0("../ecg/",files[i]), sep=";")
subject_data$subject_1
source('~/GitHub/Music-as-Medicine/scripts/importer.R')
source('~/GitHub/Music-as-Medicine/scripts/importer.R')
source('~/GitHub/Music-as-Medicine/scripts/importer.R')
library(here)
library(tuneR)
library(data.table)
library(signal)
# Basic first exploratory Bobbi MaM import script.
# To be refactored when there is more data available.
source("qrs_detect.R")
source("peak_detect.R")
lin_map <- function(x, from, to) {
(x - min(x)) / max(x - min(x)) * (to - from) + from
}
setwd(here::here("scripts"))
########################################################## import files #########################################################
# read and plot music wav, that has been pre-cut to delete all before first and past last beeps
# full range 0 to 4139.022 seconds
# here, retrieve the part from 17 to 31 minutes - that is, the first musical intermezzo
music <- readWave("../music/music-as-medicine-cut-to-beeps.wav", from = 17, to = 31, units = "minutes")
plot(music)
# read the bobbi data files in data dir
subject_list <- list()
# for now, we work with two files separately - but in the future, we will
# of course define a function to do the work of the script,
# which will take a subject_list as one of its arguments.
files = list.files(path = "../ecg/", pattern="*.csv")
for (i in 1:length(files))
# for now:
assign(paste0("subject_",i), fread(paste0("../ecg/",files[i]), sep=";"))
# for future analyses:
subject_list[[gsub("*.csv$", "", files[i])]] <-
fread(paste0("../ecg/",files[i]), sep=";")
